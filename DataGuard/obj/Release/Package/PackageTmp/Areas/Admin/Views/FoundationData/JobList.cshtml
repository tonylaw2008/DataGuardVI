@using LanguageResource
@using Common
@using AttendanceBussiness
@using DataGuard.Utilities
@using X.PagedList
@using X.PagedList.Mvc
@using X.PagedList.Mvc.Bootstrap4
@using DataGuard.Models.BusinessDataModel
@using DataGuard.Areas
@model DataGuard.Areas.JobListView

@{
    ViewBag.Title = Lang.JobList_Title;
}

@using (Html.BeginForm("JobList", "FoundationData", FormMethod.Get, new { @class = "form-inline " }))
{
    <div class="row padding-bottom10">
        <div class="col-10">
            <div class="input-group input-group-sm">
                @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "form-control form-control-navbar border-right-0", style = "background-color:#faf9eb", placeholder = "Search" })
                @Html.DropDownList("IndustryId", null, Lang.GeneralUI_Select, new { @class = "form-control form-control-sm border-left-0", data_toggle = "tooltip", title = Lang.Job_IndustryId })
                <span class="input-group-append">
                    <button type="submit" class="btn btn-primary btn-flat "><i class="fa fa-search"></i> Go!</button>
                </span>
            </div>
        </div>
        <div class="col-2 d-inline pull-right">
            <button type="button" class="btn btn-primary btn-sm text-white ml-1" title="@Lang.GeneralUI_AddNew" data-toggle="modal" data-target="#addNewJobPanel">
                &nbsp;<i class="fa fa-plus-circle font-weight-bold"></i>&nbsp;
            </button>
        </div>
    </div>
}

<div class="box-body  table-responsive" style="min-height:600px;">
    <table class="table table-striped table-hover">
        <tr>
            <th>
                <div class="text-nowrap" title="@Lang.Job_JobId" data-toggle="tooltip">
                    <span><i class="fa fa-id-card-o" style="color:mediumslateblue"> </i>@Lang.Job_JobId </span>
                </div>
            </th>
            <th>
                <div class="text-nowrap" title="@Lang.Job_JobName" data-toggle="tooltip"><span><i class="fa fa-external-link" style="color:mediumslateblue"> </i>@Lang.Job_JobName </span></div>
            </th>
            <th>
                <div class="text-nowrap" title="@Lang.Job_EnJobName" data-toggle="tooltip"><span><i class="fab fa-stack-exchange" style="color:mediumslateblue"> </i>@Lang.Job_EnJobName </span></div>
            </th> 
            <th>
                <div class="text-nowrap" title="@Lang.Job_IndustryName" data-toggle="tooltip"><span><i class="fa fa-sitemap" style="color:mediumslateblue"> </i>@Lang.Job_IndustryName </span></div>
            </th>
            <th>
                <div class="text-nowrap">
                    @Html.ActionLink(" " + Lang.GeneralUI_OrderBy, "JobList", "FoundationData", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter }, htmlAttributes: new { @class = "fa fa-sort pull-right margin-top5", title = Lang.GeneralUI_OrderByLetter })
                </div>
            </th>
        </tr>
        @{int x = 0;}
        @foreach (var item in Model.JobList)
        {
            x++;
            <tr id="@string.Format("tr{0}",item.JobId)">
                <td id="@string.Format("td{0}",item.JobId)" class="text-omit small" data-toggle="tooltip" title="@Html.DisplayFor(modelItem => item.JobId)">
                    <span id="@string.Format("sp{0}",item.JobId)" class="badge badge-dark" data-toggle="tooltip" style="cursor:pointer;">@x</span>
                    <label id="@string.Format("lbl{0}",item.JobId)" class="text-dark text-uppercase">
                        @item.JobId.ToString()
                    </label>
                </td>
                <td class="small" data-toggle="tooltip" title="@Html.DisplayFor(modelItem => item.JobName)">
                    @Html.DisplayFor(modelItem => item.JobName)
                </td>
                <td class="small" data-toggle="tooltip" title="@Html.DisplayFor(modelItem => item.EnJobName)">
                    @Html.DisplayFor(modelItem => item.EnJobName)
                </td>
                <td class="small" data-toggle="tooltip" title="@Html.DisplayFor(modelItem => item.IndustryId)">
                    <ul class="unstyled ">
                        <li class="list-inline small text-uppercase">@item.IndustryId</li>
                        <li class="list-inline">@item.IndustryName</li>
                    </ul> 
                </td>
                 
                <td>
                    <div class="btn btn-group-justified">
                        <button type="button" class="btn btn-success btn-sm pl-1 pl-1" onclick="@string.Format("javascript:BindJobDetailsData('{0}','{1}');","Edit", item.JobId)" data-toggle="modal" data-target="#editJobPanel">
                            &nbsp; &nbsp;<i class="fas fa-edit"></i>&nbsp;
                        </button>
                        <button type="button" class="btn btn-warning btn-sm pl-1 ml-2" onclick="@string.Format("javascript:DeleteJobDetailsData('{0}');", item.JobId)">
                            &nbsp; &nbsp;<i class="fas fa-trash"></i> &nbsp;
                        </button>
                    </div>
                </td>
            </tr>
        }
    </table>
</div>

<div class="btn-xs">
    @Html.PagedListPager((IPagedList)Model.JobList, page => Url.Action("JobList", "FoundationData", new { sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, occurDateTimeRange = ViewBag.CurrentOccurDateTimeRange , page = page }), new PagedListRenderOptions
    {
        ContainerDivClasses = new[] { "pagination pagination-sm" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },
        MaximumPageNumbersToDisplay = 10
    })
</div>



<!--Edit Modal -->
<div class="modal fade" id="editJobPanel" tabindex="-1" role="dialog" aria-labelledby="editJobPanel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            @using (Ajax.BeginForm("JobDetails", "FoundationData", new AjaxOptions { HttpMethod = "post", OnSuccess = "handleJobDetails", OnFailure = "errJobDetails", LoadingElementId = "Loading" }, new { @class = "form-horizontal", name = "form_JobDetails", id = "form_JobDetails" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.JobNew.JobId)
                <div class="modal-header">
                    <h5 class="modal-title" id="editLanguageTitle">@Lang.JobList_EditJobDetails_Title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label class="control-label col-12" for="JobName">@Lang.Job_JobName</label>
                        <div class="row pl-2 pr-1 input-group">
                            @Html.TextBoxFor(model => model.JobNew.JobId, new { id = "JobId", Name = "JobId", @class = "EditJobId form-control form-control-sm bold col-sm-2", title = Lang.Job_JobId, data_toggle = "tooltip" })
                            @Html.TextBoxFor(model => model.JobNew.JobName, new { id = "JobName", Name = "JobName", @class = "EditJobName form-control form-control-sm bold col-sm-10  border-left-0 input-group-append" })
                        </div>
                        @Html.ValidationMessageFor(model => model.JobNew.JobName, "", new { @class = "text-danger", data_valmsg_for = "JobName" })
                    </div>
                    <div class="form-group ">
                        <label class="control-label col-12" for="EnJobName">@Lang.Job_EnJobName</label>
                        <div class="">
                            @Html.TextBoxFor(model => model.JobNew.EnJobName, new { id = "EnJobName", Name = "EnJobName", @class = "EditEnJobName form-control form-control-sm bold col-sm-12" })
                            @Html.ValidationMessageFor(model => model.JobNew.EnJobName, "", new { @class = "text-danger", data_valmsg_for = "EnJobName" })
                        </div>
                    </div>
                    <div class="form-group ">
                        <label class="control-label col-12" for="IndustryId">@Lang.Job_IndustryName</label>
                        <div class="">
                           @Html.DropDownList("IndustryId", null, Lang.GeneralUI_Select, new { @class = "EditIndustryId form-control form-control-sm bold col-sm-12", data_toggle = "tooltip", title = Lang.Job_IndustryId })
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" id="editComfirmed" class="btn btn-primary">@string.Format("{0} {1}", Lang.GeneralUI_Comfirmed, Lang.GeneralUI_OK)</button>
                </div>
            }
        </div>
    </div>
</div>

<!--AddNew Modal --> 
<div class="modal fade" id="addNewJobPanel" tabindex="-1" role="dialog" aria-labelledby="addNewJobPanel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            @using (Ajax.BeginForm("JobAddNew", "FoundationData", new AjaxOptions { HttpMethod = "post", OnSuccess = "handleJobAddNew", OnFailure = "errJobAddNew", LoadingElementId = "Loading" }, new { @class = "form-horizontal", name = "form_JobAddNew", id = "form_JobAddNew" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.JobNew.JobId)
                <div class="modal-header">
                    <h5 class="modal-title" id="editLanguageTitle">@Lang.Job_JobAddNew_Title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label class="control-label col-12" for="JobName">@Lang.Job_JobName</label>
                        <div class="row pl-2 pr-1">
                            <div class=" input-group">
                                @Html.TextBox("JobId", "D", new { @readonly = "readonly", @class = "AddNewJobId bold  form-control form-control-sm col-sm-1 border-right-0", title = Lang.Job_JobId, data_toggle = "tooltip" })
                                @Html.TextBoxFor(model => model.JobNew.JobName, new { id = "JobName", Name = "JobName", @class = "AddNewJobName form-control form-control-sm bold col-sm-11 border-left-0 input-group-append", style = "background-color:#faf9eb" })
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.JobNew.JobName, "", new { @class = "text-danger", data_valmsg_for = "JobName" })
                    </div>
                    <div class="form-group ">
                        <label class="control-label col-12" for="EnJobName">@Lang.Job_EnJobName</label>
                        <div class="">
                            @Html.TextBoxFor(model => model.JobNew.EnJobName, new { id = "EnJobName", Name = "EnJobName", @class = "AddNewEnJobName form-control form-control-sm bold col-sm-12" })
                            @Html.ValidationMessageFor(model => model.JobNew.EnJobName, "", new { @class = "text-danger", data_valmsg_for = "EnJobName" })
                        </div>
                    </div>
                    <div class="form-group ">
                        <label class="control-label col-12" for="IndustryId">@Lang.Job_IndustryName</label>
                        <div class="">
                            @Html.DropDownList("IndustryId", null, Lang.GeneralUI_Select, new { @class = "AddNewIndustryId form-control form-control-sm bold col-sm-12"})
                        </div>
                    </div> 
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" id="AddNewComfirmed" class="btn btn-primary"> @Lang.GeneralUI_AddNew </button>
                </div>
            }
        </div>
    </div>
</div>

<script>
    function BindJobDetailsData(Prefix, JobId) {

        var httpGetUrl = "/@LangUtilities.LanguageCode/Admin/FoundationData/JobDetails";
        Prefix = "." + Prefix;
        var txtBoxJobId = Prefix + "JobId";
        var JobName = Prefix + "JobName";
        var EnJobName = Prefix + "EnJobName";
        var IndustryId = Prefix + "IndustryId";
        console.log(JobName + " | " + EnJobName + " | " + IndustryId );
        var myparamsObject = { "JobId": JobId};
        $.ajax({
            url: httpGetUrl,
            data: myparamsObject,
            type: "get",
            dataType: "json",
            error: function (data) {
                console.log(JSON.stringify(data));
            },
            success: function (data) {
                $(txtBoxJobId).val(data.JobId);
                $(JobName).val(data.JobName);
                $(EnJobName).val(data.EnJobName);
                $(IndustryId).val(data.IndustryId); 
            }
        });
    }
    //AddNew ----------------------------
    function handleJobAddNew(data) {
        layer.open({
                title: '@Lang.GeneralUI_ReturnResult'
                , content: data.Message
                , btn:'@Lang.GeneralUI_OK'
        });
        if (data.MsgCode != "0") {
            redirectLocaleUrl = "@Url.Action("JobList", "FoundationData", new { Area = "Admin"})";
            setTimeout(
                function() {
                    window.location = redirectLocaleUrl + "?searchString=" + data.MsgCode;
                }
            , 3000);
        }
       
    }

    function errJobAddNew() {
        alert('@Lang.GeneralUI_ServerError'+ "--client AddNew");
    }

    //Update ----------------------------
    function handleJobDetails(data) {
        layer.open({
            title: '@Lang.GeneralUI_ReturnResult'
            , content: data.Message
            , btn: '@Lang.GeneralUI_OK'
        });
        if (data.MsgCode != "0") {
            redirectLocaleUrl = "@Url.Action("JobList", "FoundationData", new { Area = "Admin"})";
            setTimeout(
                function() {
                    window.location = redirectLocaleUrl + "?searchString=" + data.MsgCode;
                }
            , 3000);
        }
    }

    function errJobDetails() {
        alert('@Lang.GeneralUI_ServerError'+ "--client");
    }

    function DeleteJobDetailsData(JobId)
    {
        console.log(JobId);

        layer.confirm('@Lang.JobList_ComfirmTips \n\r <br> @Lang.GeneralUI_ComfirmTipsIfDelete ', {
            title:'@Lang.GeneralUI_InfoTips',
            btn: ['@Lang.GeneralUI_Yes', '@Lang.GeneralUI_NO'] //btn
        }, function () {
            //TODO
            var httpDelUrl = "/@LangUtilities.LanguageCode/Admin/FoundationData/DeleteJob";

            var myparamsObject = { "JobId": JobId};
            $.ajax({
                url: httpDelUrl,
                data: myparamsObject,
                type: "get",
                dataType: "json",
                error: function (data) {
                    console.log(JSON.stringify(data));
                },
                success: function (data) {
                    layer.open({
                        title: '@Lang.GeneralUI_ReturnResult'
                        , content: data.Message
                    , btn:'@Lang.GeneralUI_OK'
                    });
                    if (data.MsgCode != "0") {
                        var pr_obj = "#td" + JobId;
                        $(pr_obj).parent().addClass("bg-warning-gradient");
                        setTimeout(function () {
                            $(pr_obj).parent().remove();
                        }, 3000);
                    }
                }
            });


            }, function () {
                layer.msg('@Lang.JobList_ComfirmNoTips', { icon: 1 }, {
                    time: 80000,
                    btn: ['@Lang.GeneralUI_Isee']
                });
            });
    }

</script>
