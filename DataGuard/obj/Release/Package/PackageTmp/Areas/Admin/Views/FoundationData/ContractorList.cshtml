@using LanguageResource
@using Common
@using AttendanceBussiness
@using DataGuard.Utilities
@using X.PagedList
@using X.PagedList.Mvc
@using X.PagedList.Mvc.Bootstrap4
@using DataGuard.Models.BusinessDataModel

@model DataGuard.Areas.ContractorListView

@{
    ViewBag.Title = Lang.ContractorList_Title;
}

@using (Html.BeginForm("ContractorList", "FoundationData", FormMethod.Get, new { @class = "form-inline " }))
{
    <div class="row padding-bottom10">
        <div class="col-10">
            <div class="input-group input-group-sm">
                @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "form-control form-control-navbar border-right-0",style= "background-color:#faf9eb",placeholder = "Search" })
                @Html.DropDownList("IndustryId", null, Lang.GeneralUI_Select, new { @class = "form-control form-control-sm border-left-0", data_toggle = "tooltip", title = Lang.Contractor_IndustryId })
                <span class="input-group-append">
                    <button type="submit" class="btn btn-primary btn-flat"><i class="fa fa-search"></i> Go!</button>
                </span>
            </div>
        </div>
        <div class="col-2 d-inline pull-right">
            <button type="button" class="btn btn-primary btn-sm text-white ml-1" title="@Lang.GeneralUI_AddNew" data-toggle="modal" data-target="#addNewContractorPanel">
                &nbsp;<i class="fa fa-plus-circle font-weight-bold"></i>&nbsp;
            </button>
        </div>
    </div>
}

<div class="box-body  table-responsive" style="min-height:600px;">
    <table class="table table-striped table-hover">
        <tr>
            <th>
                <div class="text-nowrap" title="@Lang.Contractor_ContractorId" data-toggle="tooltip">
                    <span><i class="fa fa-id-card-o" style="color:mediumslateblue"> </i>@Lang.Contractor_ContractorId </span>
                </div>
            </th>
            <th>
                <div class="text-nowrap" title="@Lang.Contractor_CompanyName" data-toggle="tooltip"><span><i class="fas fa-building" style="color:mediumslateblue"></i> 二判公司名稱 </span></div>
            </th>
            <th>
                <div class="text-nowrap" title="@Lang.Contractor_ContractorName" data-toggle="tooltip"><span><i class="fa fa-external-link" style="color:mediumslateblue"></i> 二判 </span></div>
            </th>
            <th>
                <div class="text-nowrap" title="@Lang.Contractor_ContactName" data-toggle="tooltip"><span><i class="fa fa-user" style="color:mediumslateblue"></i> @Lang.Contractor_ContactName </span></div>
            </th>
            <th>
                <div class="text-nowrap" title="@Lang.Contractor_ContractorNo" data-toggle="tooltip"><span><i class="fas fa-file-contract" style="color:mediumslateblue"></i> @Lang.Contractor_ContractorNo </span></div>
            </th>
            <th>
                <div class="text-nowrap" title="@Lang.Contractor_IndustryName" data-toggle="tooltip"><span><i class="fa fa-sitemap" style="color:mediumslateblue"></i>@Lang.Contractor_IndustryName </span></div>
            </th>
            <th>
                <div class="text-nowrap" title="@Lang.Contractor_ServiceStartDate" data-toggle="tooltip"><span><i class="fa fa-calendar" style="color:mediumslateblue"></i> @Lang.Contractor_ServiceStartDate </span></div>
            </th>
            <th>
                <div class="text-nowrap" title="@Lang.Contractor_ServiceEndDate" data-toggle="tooltip"><span><i class="fa fa-calendar" style="color:mediumslateblue"></i>@Lang.Contractor_ServiceEndDate </span></div>
            </th>
            <th>
                <div class="text-nowrap">
                    @Html.ActionLink(" " + Lang.GeneralUI_OrderBy, "ContractorList", "FoundationData", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter }, htmlAttributes: new { @class = "fa fa-sort pull-right margin-top5", title = Lang.GeneralUI_OrderByLetter })
                </div>
            </th>
        </tr>
        @{int x = 0;}
        @foreach (var item in Model.ContractorList)
        {
            x++;
    <tr id="@string.Format("tr{0}",item.ContractorId)">
        <td id="@string.Format("td{0}",item.ContractorId)" class="small" data-toggle="tooltip" title="@Html.DisplayFor(modelItem => item.ContractorId)">
            <div class="text-nowrap">
                <span id="@string.Format("sp{0}",item.ContractorId)" class="badge badge-dark" data-toggle="tooltip" style="cursor:pointer;">@x</span>
                <label id="@string.Format("lbl{0}",item.ContractorId)" class="text-uppercase small badge badge-success text-white">
                    @item.ContractorId.ToString()
                </label>
            </div>
        </td>
        <td class="" data-toggle="tooltip" title="@item.CompanyName">
            @Html.DisplayFor(modelItem => item.CompanyName)
        </td>
        <td class="" data-toggle="tooltip" title="@item.ContractorName">
            <details>
                <summary class="p-1"> <i class="fas fa-phone-square-alt"></i>  @item.ContractorName </summary>
                <p class="small p-0 mb-1">@Lang.Contractor_ContactPhone @item.ContactPhone</p>
                <p class="small p-0 mb-1">@Lang.Contractor_CompanyTel @item.CompanyTel</p>
                <p class="small p-0 mb-1">@Lang.Contractor_CompanyFax @item.CompanyFax</p>
                <p class="small p-0">@Lang.Contractor_CompanyAddress @item.CompanyAddress</p>
            </details>
        </td>
        <td class="" data-toggle="tooltip" title="@item.ContactName">
            <label class="text-uppercase  text-primary p-1">@Html.DisplayFor(modelItem => item.ContactName)</label>
        </td>
        <td class="" data-toggle="tooltip" title="@item.ContractorNo">
            <label class="text-uppercase text-primary p-1">@Html.DisplayFor(modelItem => item.ContractorNo)</label>
        </td>

        <td class="small" data-toggle="tooltip" title=" @String.Format("{0}\n{1}", item.IndustryId, item.IndustryName)"> 
            <div class="d-flex flex-column bd-highlight">
                <div class="p-0">@item.IndustryName</div>
                <div class="p-0">@item.IndustryId</div>
            </div>
        </td>
        <td class="small" data-toggle="tooltip" title=" @String.Format("{0:yyyy-MM-dd}", item.ServiceStartDate)">
            @String.Format("{0:yyyy-MM-dd}", item.ServiceStartDate)
        </td>
        <td class="small" data-toggle="tooltip" title="@String.Format("{0:yyyy-MM-dd}", item.ServiceEndDate)">
            @String.Format("{0:yyyy-MM-dd}", item.ServiceEndDate)
        </td>
        <td>
            <div class="btn btn-group-justified">
                <button type="button" class="btn btn-outline-warning btn-sm pl-1 pl-1" onclick="@string.Format("javascript:BindContractorDetailsData('{0}','{1}');","Edit", item.ContractorId)" data-toggle="modal" data-target="#editContractorPanel">
                    &nbsp; &nbsp;<i class="fas fa-pen"></i>&nbsp;
                </button>
                <button type="button" class="btn btn-outline-danger btn-sm pl-1 ml-2" onclick="@string.Format("javascript:DeleteContractorDetailsData('{0}');", item.ContractorId)">
                    &nbsp; &nbsp;<i class="fas fa-trash"></i> &nbsp;
                </button>
            </div>
        </td>
    </tr>
        }
    </table>
</div>

<div class="btn-xs">
    @Html.PagedListPager((IPagedList)Model.ContractorList, page => Url.Action("ContractorList", "FoundationData", new { sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, occurDateTimeRange = ViewBag.CurrentOccurDateTimeRange , page = page }), new PagedListRenderOptions
    {
        ContainerDivClasses = new[] { "pagination pagination-sm" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },
        MaximumPageNumbersToDisplay = 10
    })
</div>



<!--Edit Modal -->
<div class="modal fade" id="editContractorPanel" tabindex="-1" role="dialog" aria-labelledby="editContractorPanel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            @using (Ajax.BeginForm("ContractorDetails", "FoundationData", new AjaxOptions { HttpMethod = "post", OnSuccess = "handleContractorDetails", OnFailure = "errContractorDetails", LoadingElementId = "Loading" }, new { @class = "form-horizontal", name = "form_ContractorDetails", id = "form_ContractorDetails" }))
            {
                @Html.AntiForgeryToken() 
                <div class="modal-header">
                    <h5 class="modal-title" id="editLanguageTitle">@Lang.ContractorList_EditContractorDetails_Title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="d-flex flex-row bd-highlight mb-3">
                        <div class="p-0 bd-highlight">
                            <div class="form-group pl-0 ml-0">
                                <label class="control-label" for="ContractorTitle">@Lang.Contractor_ContractorName</label>
                                <div class="pl-0 pr-1">
                                    <div class=" input-group">
                                        @Html.TextBoxFor(model => model.ContractorNew.ContractorId, new {id = "ContractorId", Name = "ContractorId", @readonly = "readonly", @class = "EditContractorId bold  form-control form-control-sm border-right-0 small", style = "max-width:60px;", title = Lang.Contractor_ContractorId, data_toggle = "tooltip" })
                                        @Html.TextBoxFor(model => model.ContractorNew.ContractorName, new { id = "ContractorName", Name = "ContractorName", @class = "EditContractorName form-control form-control-sm bold col-sm-11 border-left-0 input-group-append" })
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.ContractorNew.ContractorName, "", new { @class = "text-danger", data_valmsg_for = "ContractorName" })
                            </div>
                        </div>

                        <div class="p-0 bd-highlight">
                            <div class="form-group ">
                                <label class="control-label" for="EnContractorTitle">@Lang.Contractor_ContactName</label>
                                <div class="pr-1">
                                    @Html.TextBoxFor(model => model.ContractorNew.ContactName, new { id = "ContactName", Name = "ContactName", @class = "EditContactName form-control form-control-sm bold" })
                                    @Html.ValidationMessageFor(model => model.ContractorNew.ContactName, "", new { @class = "text-danger", data_valmsg_for = "ContactName" })
                                </div>
                            </div>
                        </div>

                        <div class="p-0 bd-highlight">
                            <div class="form-group ">
                                <label class="control-label" for="EnContractorTitle">@Lang.Contractor_ContractorNo</label>
                                <div class="">
                                    @Html.TextBoxFor(model => model.ContractorNew.ContractorNo, new { id = "ContractorNo", Name = "ContractorNo", @class = "EditContractorNo form-control form-control-sm bold" })
                                    @Html.ValidationMessageFor(model => model.ContractorNew.ContractorNo, "", new { @class = "text-danger", data_valmsg_for = "ContractorNo" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="d-flex flex-row bd-highlight mb-3">
                        <div class="p-0 bd-highlight">
                            <div class="form-group ">
                                <label class="control-label" for="EnContractorTitle">@Lang.Contractor_ContactPhone</label>
                                <div class="pr-1">
                                    @Html.TextBoxFor(model => model.ContractorNew.ContactPhone, new { id = "ContactPhone", Name = "ContactPhone", @class = "EditContactPhone form-control form-control-sm" })
                                    @Html.ValidationMessageFor(model => model.ContractorNew.ContactPhone, "", new { @class = "text-danger", data_valmsg_for = "ContactPhone" })
                                </div>
                            </div>
                        </div>

                        <div class="p-0 bd-highlight">
                            <div class="form-group ">
                                <label class="control-label" for="EnContractorTitle">@Lang.Contractor_CompanyTel</label>
                                <div class="pr-1">
                                    @Html.TextBoxFor(model => model.ContractorNew.CompanyTel, new { id = "CompanyTel", Name = "CompanyTel", @class = "EditCompanyTel form-control form-control-sm" })
                                    @Html.ValidationMessageFor(model => model.ContractorNew.CompanyTel, "", new { @class = "text-danger", data_valmsg_for = "CompanyTel" })
                                </div>
                            </div>
                        </div>

                        <div class="p-0 bd-highlight">
                            <div class="form-group ">
                                <label class="control-label" for="EnContractorTitle">@Lang.Contractor_CompanyFax</label>
                                <div class="">
                                    @Html.TextBoxFor(model => model.ContractorNew.CompanyFax, new { id = "CompanyFax", Name = "CompanyFax", @class = "EditCompanyFax form-control form-control-sm" })
                                    @Html.ValidationMessageFor(model => model.ContractorNew.CompanyFax, "", new { @class = "text-danger", data_valmsg_for = "CompanyFax" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="d-flex flex-row bd-highlight mb-3">
                        <div class="p-0 bd-highlight col-4">
                            <div class="form-group ">
                                <label class="control-label" for="EnContractorTitle">@Lang.Contractor_ServiceDateRange</label>
                                <div class="pr-1">
                                    @Html.TextBoxFor(model => model.ContractorNew.SetServiceDateRange, new { id = "SetServiceDateRange", Name = "SetServiceDateRange", @class = "EditSetServiceDateRange SetServiceDateRange form-control form-control-sm " })
                                    @Html.ValidationMessageFor(model => model.ContractorNew.ServiceDateRange, "", new { @class = "text-danger", data_valmsg_for = "SetServiceDateRange" })
                                </div>
                            </div>
                        </div>

                        <div class="p-0 bd-highlight  col-8">
                            <div class="form-group">
                                <label class="control-label" for="EnContractorTitle">@Lang.Contractor_CompanyName</label>
                                <div class="form-group">
                                    @Html.TextBoxFor(model => model.ContractorNew.CompanyName, new { id = "CompanyName", Name = "CompanyName", @class = "EditCompanyName form-control form-control-sm col-12" })
                                    @Html.ValidationMessageFor(model => model.ContractorNew.CompanyName, "", new { @class = "text-danger", data_valmsg_for = "CompanyName" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-12" for="IndustryId">@Lang.Contractor_IndustryName</label>
                        <div class="">
                            @Html.DropDownList("IndustryId", null, Lang.GeneralUI_Select, new { @class = "EditIndustryId form-control form-control-sm bold col-sm-12" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-12" for="IndustryId">@Lang.Contractor_CompanyAddress</label>
                        <div class="">
                            @Html.TextBoxFor(model => model.ContractorNew.CompanyAddress, new { id = "CompanyAddress", Name = "CompanyAddress", @class = "EditCompanyAddress form-control form-control-sm" })
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" id="editComfirmed" class="btn btn-primary">@string.Format("{0} {1}", Lang.GeneralUI_Comfirmed, Lang.GeneralUI_OK)</button>
                </div>
            }
        </div>
    </div>
</div>

<!--AddNew Modal --> 
<div class="modal fade" id="addNewContractorPanel" tabindex="-1" role="dialog" aria-labelledby="addNewContractorPanel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            @using (Ajax.BeginForm("ContractorAddNew", "FoundationData", new AjaxOptions { HttpMethod = "post", OnSuccess = "handleContractorAddNew", OnFailure = "errContractorAddNew", LoadingElementId = "Loading" }, new { @class = "form-horizontal", name = "form_ContractorAddNew", id = "form_ContractorAddNew" }))
            {
                @Html.AntiForgeryToken() 
                <div class="modal-header">
                    <h5 class="modal-title" id="editContractorTitle">@Lang.Contractor_ContractorAddNew_Title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="d-flex flex-row bd-highlight mb-3">
                        <div class="p-0 bd-highlight">
                            <div class="form-group pl-0 ml-0">
                                <label class="control-label" for="ContractorTitle">@Lang.Contractor_ContractorName</label>
                                <div class="pl-0 pr-1">
                                    <div class=" input-group">
                                        @Html.TextBox("ContractorId", "CN", new { @readonly = "readonly", @class = "AddNewContractorId bold  form-control form-control-sm border-right-0", style = "max-width:30px;", title = Lang.Contractor_ContractorId, data_toggle = "tooltip" })
                                        @Html.TextBoxFor(model => model.ContractorNew.ContractorName, new { id = "ContractorName", Name = "ContractorName", @class = "AddNewContractorName form-control form-control-sm bold col-sm-11 border-left-0 input-group-append" })
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.ContractorNew.ContractorName, "", new { @class = "text-danger", data_valmsg_for = "ContractorName" })
                            </div>
                        </div>

                        <div class="p-0 bd-highlight">
                            <div class="form-group ">
                                <label class="control-label" for="EnContractorTitle">@Lang.Contractor_ContactName</label>
                                <div class="pr-1">
                                    @Html.TextBoxFor(model => model.ContractorNew.ContactName, new { id = "ContactName", Name = "ContactName", @class = "AddNewContactName form-control form-control-sm bold" })
                                    @Html.ValidationMessageFor(model => model.ContractorNew.ContactName, "", new { @class = "text-danger", data_valmsg_for = "ContactName" })
                                </div>
                            </div>
                        </div>

                        <div class="p-0 bd-highlight">
                            <div class="form-group ">
                                <label class="control-label" for="EnContractorTitle">@Lang.Contractor_ContractorNo</label>
                                <div class="">
                                    @Html.TextBoxFor(model => model.ContractorNew.ContractorNo, new { id = "ContractorNo", Name = "ContractorNo", @class = "AddNewContractorNo form-control form-control-sm bold" })
                                    @Html.ValidationMessageFor(model => model.ContractorNew.ContractorNo, "", new { @class = "text-danger", data_valmsg_for = "ContractorNo" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="d-flex flex-row bd-highlight mb-3">
                        <div class="p-0 bd-highlight">
                            <div class="form-group ">
                                <label class="control-label" for="EnContractorTitle">@Lang.Contractor_ContactPhone</label>
                                <div class="pr-1">
                                    @Html.TextBoxFor(model => model.ContractorNew.ContactPhone, new { id = "ContactPhone", Name = "ContactPhone", @class = "AddNewContactPhone form-control form-control-sm" })
                                    @Html.ValidationMessageFor(model => model.ContractorNew.ContactPhone, "", new { @class = "text-danger", data_valmsg_for = "ContactPhone" })
                                </div>
                            </div>
                        </div>

                        <div class="p-0 bd-highlight">
                            <div class="form-group ">
                                <label class="control-label" for="EnContractorTitle">@Lang.Contractor_CompanyTel</label>
                                <div class="pr-1">
                                    @Html.TextBoxFor(model => model.ContractorNew.CompanyTel, new { id = "CompanyTel", Name = "CompanyTel", @class = "AddNewCompanyTel form-control form-control-sm" })
                                    @Html.ValidationMessageFor(model => model.ContractorNew.CompanyTel, "", new { @class = "text-danger", data_valmsg_for = "CompanyTel" })
                                </div>
                            </div>
                        </div>

                        <div class="p-0 bd-highlight">
                            <div class="form-group ">
                                <label class="control-label" for="EnContractorTitle">@Lang.Contractor_CompanyFax</label>
                                <div class="">
                                    @Html.TextBoxFor(model => model.ContractorNew.CompanyFax, new { id = "CompanyFax", Name = "CompanyFax", @class = "AddNewCompanyFax form-control form-control-sm" })
                                    @Html.ValidationMessageFor(model => model.ContractorNew.CompanyFax, "", new { @class = "text-danger", data_valmsg_for = "CompanyFax" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="d-flex flex-row bd-highlight mb-3">
                        <div class="p-0 bd-highlight col-4">
                            <div class="form-group ">
                                <label class="control-label" for="EnContractorTitle">@Lang.Contractor_ServiceDateRange</label>
                                <div class="pr-1">
                                    @Html.TextBoxFor(model => model.ContractorNew.SetServiceDateRange, new { id = "SetServiceDateRange", Name = "SetServiceDateRange", @class = "AddNewSetServiceDateRange SetServiceDateRange form-control form-control-sm " })
                                    @Html.ValidationMessageFor(model => model.ContractorNew.ServiceDateRange, "", new { @class = "text-danger", data_valmsg_for = "SetServiceDateRange" })
                                </div>
                            </div>
                        </div>

                        <div class="p-0 bd-highlight col-8">
                            <div class="form-group ">
                                <label class="control-label" for="EnContractorTitle">@Lang.Contractor_CompanyName</label>
                                <div class="">
                                    @Html.TextBoxFor(model => model.ContractorNew.CompanyName, new { id = "CompanyName", Name = "CompanyName", @class = "AddNewCompanyName form-control form-control-sm  col-12" })
                                    @Html.ValidationMessageFor(model => model.ContractorNew.CompanyName, "", new { @class = "text-danger", data_valmsg_for = "CompanyName" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-12" for="IndustryId">@Lang.Contractor_IndustryName</label>
                        <div class="">
                            @Html.DropDownList("IndustryId", null, Lang.GeneralUI_Select, new { @class = "AddNewIndustryId form-control form-control-sm bold col-sm-12" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-12" for="IndustryId">@Lang.Contractor_CompanyAddress</label>
                        <div class="">
                            @Html.TextBoxFor(model => model.ContractorNew.CompanyAddress, new { id = "CompanyAddress", Name = "CompanyAddress", @class = "AddNewCompanyAddress form-control form-control-sm" })
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" id="AddNewComfirmed" class="btn btn-primary"> @Lang.GeneralUI_AddNew </button>
                </div>
            }
        </div>
    </div>
</div>
<script>
    $(document).ready(function () { 
        var SetServiceDateRangeMultiLanguage = DateTimeRangeMultiLanguage;
        SetServiceDateRangeMultiLanguage.timePicker = false;
        $('.SetServiceDateRange').daterangepicker(SetServiceDateRangeMultiLanguage);
    });
</script>
<script>
    function BindContractorDetailsData(Prefix, ParamContractorId) {

        var httpGetUrl = "/@LangUtilities.LanguageCode/Admin/FoundationData/ContractorDetails";
        Prefix = "." + Prefix;
         
        var ContractorId = Prefix + "ContractorId";
        var ContractorName = Prefix + "ContractorName";
        var CompanyName = Prefix + "CompanyName";
        var ContractorNo = Prefix + "ContractorNo";
        var IndustryId = Prefix + "IndustryId";
        var ContactName = Prefix + "ContactName";
        var ContactPhone = Prefix + "ContactPhone";
        var CompanyTel = Prefix + "CompanyTel";
        var CompanyFax = Prefix + "CompanyFax";
        var SetServiceDateRange = Prefix + "SetServiceDateRange";
        var CompanyAddress = Prefix + "CompanyAddress";

        var myparamsObject = { "ContractorId": ParamContractorId};
        $.ajax({
            url: httpGetUrl,
            data: myparamsObject,
            type: "get",
            dataType: "json",
            error: function (data) {
                console.log(JSON.stringify(data));
            },
            success: function (data) {
                console.log(data);
                $(ContractorId).val(data.ContractorId);
                $(ContractorName).val(data.ContractorName);
                $(CompanyName).val(data.CompanyName);
                $(ContractorNo).val(data.ContractorId);

                $(IndustryId).val(data.IndustryId);
                $(ContactName).val(data.ContactName);
                $(ContactPhone).val(data.ContactPhone);
                $(CompanyTel).val(data.CompanyTel);

                $(CompanyFax).val(data.CompanyFax);
                $(SetServiceDateRange).val(data.SetServiceDateRange);
                $(CompanyAddress).val(data.CompanyAddress); 
            }
        });
    }
    //AddNew ----------------------------
    function handleContractorAddNew(data) {
        console.log(JSON.stringify(data));
        layer.open({
                title: '@Lang.GeneralUI_ReturnResult'
            , content: data.Message
                , btn:'@Lang.GeneralUI_OK'
        });
        if (data.MsgCode != "0") {
            redirectLocaleUrl = "@Url.Action("ContractorList", "FoundationData", new { Area = "Admin"})";
            setTimeout(
                function() {
                    window.location = redirectLocaleUrl + "?searchString=" + data.MsgCode;
                }
            , 3000);
        }
       
    }

    function errContractorAddNew() {
        alert('@Lang.GeneralUI_ServerError'+ "--client AddNew");
    }

    //Update ----------------------------
    function handleContractorDetails(data) {
        layer.open({
            title: '@Lang.GeneralUI_ReturnResult'
            , content: data.Message
            , btn: '@Lang.GeneralUI_OK'
        });
        if (data.MsgCode != "0") {
            redirectLocaleUrl = "@Url.Action("ContractorList", "FoundationData", new { Area = "Admin"})";
            setTimeout(
                function() {
                    window.location = redirectLocaleUrl + "?searchString=" + data.MsgCode;
                }
            , 3000);
        }
    }
    function errContractorDetails() {
        alert('@Lang.GeneralUI_ServerError'+ "--client");
    } 

    function DeleteContractorDetailsData(ContractorId)
    {
        console.log(ContractorId);

        layer.confirm('@Lang.ContractorList_ComfirmTips \n\r <br> @Lang.GeneralUI_ComfirmTipsIfDelete ', {
            title:'@Lang.GeneralUI_InfoTips',
            btn: ['@Lang.GeneralUI_Yes', '@Lang.GeneralUI_NO'] //btn
        }, function () {
            //TODO
            var httpDelUrl = "/@LangUtilities.LanguageCode/Admin/FoundationData/DeleteContractor";

            var myparamsObject = { "ContractorId": ContractorId};
            $.ajax({
                url: httpDelUrl,
                data: myparamsObject,
                type: "get",
                dataType: "json",
                error: function (data) {
                    console.log(JSON.stringify(data));
                },
                success: function (data) {
                    console.log(JSON.stringify(data));
                    layer.open({
                        title: '@Lang.GeneralUI_ReturnResult'
                        , content: data.Message
                    , btn:'@Lang.GeneralUI_OK'
                    });
                    if (data.MsgCode != "0") {
                        var pr_obj = "#td" + ContractorId;
                        $(pr_obj).parent().addClass("bg-warning-gradient");
                        setTimeout(function () {
                            $(pr_obj).parent().remove();
                        }, 3000);
                    }
                }
            });
             
            }, function () {
                layer.msg('@Lang.ContractorList_ComfirmNoTips', { icon: 1 }, {
                    time: 80000,
                    btn: ['@Lang.GeneralUI_Isee']
                });
            });
    }

</script>
