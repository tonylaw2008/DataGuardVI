@using LanguageResource
@using Common
@using AttendanceBussiness
@using DataGuard.Utilities
@using X.PagedList
@using X.PagedList.Mvc
@using X.PagedList.Mvc.Bootstrap4
@using DataGuard.Models.BusinessDataModel

@model DataGuard.Areas.PositionListView

@{
    ViewBag.Title = Lang.PositionList_Title;
}

@using (Html.BeginForm("PositionList", "FoundationData", FormMethod.Get, new { @class = "form-inline " }))
{
    <div class="row padding-bottom10">
        <div class="col-10">
            <div class="input-group input-group-sm">
                @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "form-control form-control-navbar border-right-0",style= "background-color:#faf9eb",placeholder = "Search" })
                @Html.DropDownList("IndustryId", null, Lang.GeneralUI_Select, new { @class = "form-control form-control-sm border-left-0", data_toggle = "tooltip", title = Lang.Position_IndustryId })
                <span class="input-group-append">
                    <button type="submit" class="btn btn-primary btn-flat"><i class="fas fa-search"></i> Go!</button>
                </span>
            </div>
        </div>
        <div class="col-2 d-inline pull-right">
            <button type="button" class="btn btn-primary btn-sm text-white ml-1" title="@Lang.GeneralUI_AddNew" data-toggle="modal" data-target="#addNewPositionPanel">
                &nbsp;<i class="fas fa-plus-circle font-weight-bold"></i>&nbsp;
            </button>
        </div>
    </div>
}

<div class="box-body  table-responsive" style="min-height:600px;">
    <table class="table table-striped table-hover">
        <tr>
            <th>
                <div class="text-nowrap" title="@Lang.Position_PositionId" data-toggle="tooltip">
                    <span><i class="fa fa-id-card-o" style="color:mediumslateblue"> </i>@Lang.Position_PositionId </span>
                </div>
            </th>
            <th>
                <div class="text-nowrap" title="@Lang.Position_PositionTitle" data-toggle="tooltip"><span><i class="fa fa-external-link" style="color:mediumslateblue"> </i>@Lang.Position_PositionTitle </span></div>
            </th>
            <th>
                <div class="text-nowrap" title="@Lang.Position_EnPositionTitle" data-toggle="tooltip"><span><i class="fa fa-stack-exchange" style="color:mediumslateblue"> </i>@Lang.Position_EnPositionTitle </span></div>
            </th>
            <th>
                <div class="text-nowrap" title="@Lang.Position_IndustryName" data-toggle="tooltip"><span><i class="fa fa-sitemap" style="color:mediumslateblue"> </i>@Lang.Position_IndustryName </span></div>
            </th>
            <th>
                <div class="text-nowrap" title="@Lang.Position_CreatedDate" data-toggle="tooltip"><span><i class="fa fa-calendar" style="color:mediumslateblue"> </i>@Lang.Position_CreatedDate </span></div>
            </th>
            <th>
                <div class="text-nowrap">
                    @Html.ActionLink(" " + Lang.GeneralUI_OrderBy, "PositionList", "FoundationData", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter }, htmlAttributes: new { @class = "fa fa-sort pull-right margin-top5", title = Lang.GeneralUI_OrderByLetter })
                </div>
            </th>
        </tr>
        @{int x = 0;}
        @foreach (var item in Model.PositionList)
        {
            x++;
        <tr id="@string.Format("tr{0}",item.PositionId)">
            <td id="@string.Format("td{0}",item.PositionId)" class="text-omit small" data-toggle="tooltip" title="@Html.DisplayFor(modelItem => item.PositionId)">
                <span id="@string.Format("sp{0}",item.PositionId)" class="badge badge-dark" data-toggle="tooltip" style="cursor:pointer;">@x</span>
                <label id="@string.Format("lbl{0}",item.PositionId)" class="text-dark text-uppercase">
                    @item.PositionId.ToString()
                </label>
            </td>
            <td class="small" data-toggle="tooltip" title="@item.PositionTitle">
                @Html.DisplayFor(modelItem => item.PositionTitle)
            </td>
            <td class="small" data-toggle="tooltip" title="@item.EnPositionTitle">
                @Html.DisplayFor(modelItem => item.EnPositionTitle)
            </td>
            <td class="small" data-toggle="tooltip" title="@item.IndustryId">
                @String.Format("{0} {1}", item.IndustryId, item.IndustryName)
            </td>
            <td class="small" data-toggle="tooltip" title="@item.CreatedDate">
                @Html.DisplayFor(modelItem => item.CreatedDate)
            </td>
            <td>
                <div class="btn btn-group-justified">
                    <button type="button" class="btn btn-success btn-sm pl-1 pl-1" onclick="@string.Format("javascript:BindPositionDetailsData('{0}','{1}');","Edit", item.PositionId)" data-toggle="modal" data-target="#editPositionPanel">
                        &nbsp; &nbsp;<i class="fas fa-edit"></i>&nbsp;
                    </button>
                    <button type="button" class="btn btn-warning btn-sm pl-1 ml-2" onclick="@string.Format("javascript:DeletePositionDetailsData('{0}');", item.PositionId)">
                        &nbsp; &nbsp;<i class="fas fa-trash"></i> &nbsp;
                    </button>
                </div>
            </td>
        </tr>
        }
    </table>
</div>

<div class="btn-xs">
    @Html.PagedListPager((IPagedList)Model.PositionList, page => Url.Action("PositionList", "FoundationData", new { sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, occurDateTimeRange = ViewBag.CurrentOccurDateTimeRange , page = page }), new PagedListRenderOptions
    {
        ContainerDivClasses = new[] { "pagination pagination-sm" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },
        MaximumPageNumbersToDisplay = 10
    })
</div>



<!--Edit Modal -->
<div class="modal fade" id="editPositionPanel" tabindex="-1" role="dialog" aria-labelledby="editPositionPanel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            @using (Ajax.BeginForm("PositionDetails", "FoundationData", new AjaxOptions { HttpMethod = "post", OnSuccess = "handlePositionDetails", OnFailure = "errPositionDetails", LoadingElementId = "Loading" }, new { @class = "form-horizontal", name = "form_PositionDetails", id = "form_PositionDetails" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.PositionNew.PositionId)
                <div class="modal-header">
                    <h5 class="modal-title" id="editLanguageTitle">@Lang.PositionList_EditPositionDetails_Title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label class="control-label col-12" for="PositionTitle">@Lang.Position_PositionTitle</label>
                        <div class="row pl-2 pr-1 input-group">
                            @Html.TextBoxFor(model => model.PositionNew.PositionId, new { id = "PositionId", Name = "PositionId", @class = "EditPositionId form-control form-control-sm bold col-sm-2", title = Lang.Position_PositionId, data_toggle = "tooltip" })
                            @Html.TextBoxFor(model => model.PositionNew.PositionTitle, new { id = "PositionTitle", Name = "PositionTitle", @class = "EditPositionTitle form-control form-control-sm bold col-sm-10  border-left-0 input-group-append" })
                        </div>
                        @Html.ValidationMessageFor(model => model.PositionNew.PositionTitle, "", new { @class = "text-danger", data_valmsg_for = "PositionTitle" })
                    </div>
                    <div class="form-group ">
                        <label class="control-label col-12" for="EnPositionTitle">@Lang.Position_EnPositionTitle</label>
                        <div class="">
                            @Html.TextBoxFor(model => model.PositionNew.EnPositionTitle, new { id = "EnPositionTitle", Name = "EnPositionTitle", @class = "EditEnPositionTitle form-control form-control-sm bold col-sm-12" })
                            @Html.ValidationMessageFor(model => model.PositionNew.EnPositionTitle, "", new { @class = "text-danger", data_valmsg_for = "EnPositionTitle" })
                        </div>
                    </div>
                    <div class="form-group ">
                        <label class="control-label col-12" for="IndustryId">@Lang.Position_IndustryName</label>
                        <div class="">
                           @Html.DropDownList("IndustryId", null, Lang.GeneralUI_Select, new { @class = "EditIndustryId form-control form-control-sm bold col-sm-12", data_toggle = "tooltip", title = Lang.Position_IndustryId })
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" id="editComfirmed" class="btn btn-primary">@string.Format("{0} {1}", Lang.GeneralUI_Comfirmed, Lang.GeneralUI_OK)</button>
                </div>
            }
        </div>
    </div>
</div>

<!--AddNew Modal --> 
<div class="modal fade" id="addNewPositionPanel" tabindex="-1" role="dialog" aria-labelledby="addNewPositionPanel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            @using (Ajax.BeginForm("PositionAddNew", "FoundationData", new AjaxOptions { HttpMethod = "post", OnSuccess = "handlePositionAddNew", OnFailure = "errPositionAddNew", LoadingElementId = "Loading" }, new { @class = "form-horizontal", name = "form_PositionAddNew", id = "form_PositionAddNew" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.PositionNew.PositionId)
                <div class="modal-header">
                    <h5 class="modal-title" id="editPositionTitle">@Lang.Position_PositionAddNew_Title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label class="control-label col-12" for="PositionTitle">@Lang.Position_PositionTitle</label>
                        <div class="row pl-2 pr-1">
                            <div class=" input-group">
                                @Html.TextBox("PositionId", "P", new { @readonly = "readonly", @class = "AddNewPositionId bold  form-control form-control-sm col-sm-1 border-right-0",style="max-width:40px;", title = Lang.Position_PositionId, data_toggle = "tooltip" })
                                @Html.TextBoxFor(model => model.PositionNew.PositionTitle, new { id = "PositionTitle", Name = "PositionTitle", @class = "AddNewPositionTitle form-control form-control-sm bold col-sm-11 border-left-0 input-group-append" })
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.PositionNew.PositionTitle, "", new { @class = "text-danger", data_valmsg_for = "PositionTitle" })
                    </div>
                    <div class="form-group ">
                        <label class="control-label col-12" for="EnPositionTitle">@Lang.Position_EnPositionTitle</label>
                        <div class="">
                            @Html.TextBoxFor(model => model.PositionNew.EnPositionTitle, new { id = "EnPositionTitle", Name = "EnPositionTitle", @class = "AddNewEnPositionTitle form-control form-control-sm bold col-sm-12" })
                            @Html.ValidationMessageFor(model => model.PositionNew.EnPositionTitle, "", new { @class = "text-danger", data_valmsg_for = "EnPositionTitle" })
                        </div>
                    </div>
                    <div class="form-group ">
                        <label class="control-label col-12" for="IndustryId">@Lang.Position_IndustryName</label>
                        <div class="">
                            @Html.DropDownList("IndustryId", null, Lang.GeneralUI_Select, new { @class = "AddNewIndustryId form-control form-control-sm bold col-sm-12"})
                        </div>
                    </div> 
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" id="AddNewComfirmed" class="btn btn-primary"> @Lang.GeneralUI_AddNew </button>
                </div>
            }
        </div>
    </div>
</div>

<script>
    function BindPositionDetailsData(Prefix, PositionId) {

        var httpGetUrl = "/@LangUtilities.LanguageCode/Admin/FoundationData/PositionDetails";
        Prefix = "." + Prefix;
        var txtBoxPositionId = Prefix + "PositionId";
        var PositionTitle = Prefix + "PositionTitle";
        var EnPositionTitle = Prefix + "EnPositionTitle";
        var IndustryId = Prefix + "IndustryId";
        console.log(PositionTitle + " | " + EnPositionTitle + " | " + IndustryId );
        var myparamsObject = { "PositionId": PositionId};
        $.ajax({
            url: httpGetUrl,
            data: myparamsObject,
            type: "get",
            dataType: "json",
            error: function (data) {
                console.log(JSON.stringify(data));
            },
            success: function (data) {
                $(txtBoxPositionId).val(data.PositionId);
                $(PositionTitle).val(data.PositionTitle);
                $(EnPositionTitle).val(data.EnPositionTitle);
                $(IndustryId).val(data.IndustryId); 
            }
        });
    }
    //AddNew ----------------------------
    function handlePositionAddNew(data) {
        console.log(JSON.stringify(data));
        layer.open({
                title: '@Lang.GeneralUI_ReturnResult'
            , content: data.Message
                , btn:'@Lang.GeneralUI_OK'
        });
        if (data.MsgCode != "0") {
            redirectLocaleUrl = "@Url.Action("PositionList", "FoundationData", new { Area = "Admin"})";
            setTimeout(
                function() {
                    window.location = redirectLocaleUrl + "?searchString=" + data.MsgCode;
                }
            , 3000);
        }
       
    }

    function errPositionAddNew() {
        alert('@Lang.GeneralUI_ServerError'+ "--client AddNew");
    }

    //Update ----------------------------
    function handlePositionDetails(data) {
        layer.open({
            title: '@Lang.GeneralUI_ReturnResult'
            , content: data.Message
            , btn: '@Lang.GeneralUI_OK'
        });
        if (data.MsgCode != "0") {
            redirectLocaleUrl = "@Url.Action("PositionList", "FoundationData", new { Area = "Admin"})";
            setTimeout(
                function() {
                    window.location = redirectLocaleUrl + "?searchString=" + data.MsgCode;
                }
            , 3000);
        }
    }
    function errPositionDetails() {
        alert('@Lang.GeneralUI_ServerError'+ "--client");
    } 

    function DeletePositionDetailsData(PositionId)
    {
        console.log(PositionId);

        layer.confirm('@Lang.PositionList_ComfirmTips \n\r <br> @Lang.GeneralUI_ComfirmTipsIfDelete ', {
            title:'@Lang.GeneralUI_InfoTips',
            btn: ['@Lang.GeneralUI_Yes', '@Lang.GeneralUI_NO'] //btn
        }, function () {
            //TODO
            var httpDelUrl = "/@LangUtilities.LanguageCode/Admin/FoundationData/DeletePosition";

            var myparamsObject = { "PositionId": PositionId};
            $.ajax({
                url: httpDelUrl,
                data: myparamsObject,
                type: "get",
                dataType: "json",
                error: function (data) {
                    console.log(JSON.stringify(data));
                },
                success: function (data) {
                    console.log(JSON.stringify(data));
                    layer.open({
                        title: '@Lang.GeneralUI_ReturnResult'
                        , content: data.Message
                    , btn:'@Lang.GeneralUI_OK'
                    });
                    if (data.MsgCode != "0") {
                        var pr_obj = "#td" + PositionId;
                        $(pr_obj).parent().addClass("bg-warning-gradient");
                        setTimeout(function () {
                            $(pr_obj).parent().remove();
                        }, 3000);
                    }
                }
            });
             
            }, function () {
                layer.msg('@Lang.PositionList_ComfirmNoTips', { icon: 1 }, {
                    time: 80000,
                    btn: ['@Lang.GeneralUI_Isee']
                });
            });
    }

</script>
