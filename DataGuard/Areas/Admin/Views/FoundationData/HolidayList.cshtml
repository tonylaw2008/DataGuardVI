@using LanguageResource
@using Common
@using AttendanceBussiness
@using DataGuard.Utilities
@using X.PagedList
@using X.PagedList.Mvc
@using X.PagedList.Mvc.Bootstrap4
@using DataGuard.Models.BusinessDataModel
@using DataGuard.Areas
@model DataGuard.Areas.HolidayListView

@{
    ViewBag.Title = Lang.HolidayList_Title;
}

@using (Html.BeginForm("HolidayList", "FoundationData", FormMethod.Get, new { @class = "form-inline " }))
{
    <div class="row padding-bottom10">
        <div class="col-10">
            <div class="input-group input-group-sm">
                @Html.TextBox("HolidayDateRange", ViewBag.HolidayDateRange as string, new { @class = "DateRange form-control border-right-0", style = "width:300px;background-color:#faf9eb", title = Lang.HolidayList_HolidayDateRange, @data_toggle = "tooltip", placeholder = Lang.HolidayList_HolidayDateRange, autocomplete = "off" })
                @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "form-control form-control-navbar border-left-0 border-left-0", placeholder = "Search" })
                <span class="input-group-append">
                    <button type="submit" class="btn btn-primary btn-flat"><i class="fa fa-search"></i> Go!</button>
                </span>
            </div>
        </div>
        <div class="col-2 d-inline pull-right">
            <button type="button" class="btn btn-primary btn-sm text-white ml-1" title="@Lang.GeneralUI_AddNew" data-toggle="modal" data-target="#addNewHolidayPanel">
                &nbsp;<i class="fa fa-plus-circle font-weight-bold"></i>&nbsp;
            </button>
        </div>
    </div>
}

<div class="box-body  table-responsive" style="min-height:600px;">
    <table class="table table-striped table-hover">
        <tr>
            <th>
                <div class="text-nowrap" title="@Lang.Holiday_HolidayId" data-toggle="tooltip">
                    <span><i class="fa fa-id-card-o" style="color:mediumslateblue"> </i> @Lang.Holiday_HolidayId </span>
                </div>
            </th>
            <th>
                <div class="text-nowrap" title="@Lang.Holiday_HolidayCnName" data-toggle="tooltip" style="max-width:160px;overflow:hidden;"><span><i class="fa fa-caret-right" style="color:mediumslateblue"> </i> @Lang.Holiday_HolidayCnName </span></div>
            </th> 
            <th>
                <div class="text-nowrap" title="@Lang.Holiday_HolidayDate" data-toggle="tooltip"  style="max-width:160px;overflow:hidden;"><span><i class="fa fa-calendar" style="color:mediumslateblue"> </i> @Lang.Holiday_HolidayDate </span></div>
            </th>
            <th>
                <div class="text-nowrap" title="@Lang.Holiday_StatutoryHoliday" data-toggle="tooltip"  style="max-width:160px;overflow:hidden;"><span><i class="fa fa-calendar-o" style="color:mediumslateblue"> </i> @Lang.Holiday_StatutoryHoliday </span></div>
            </th>
            <th>
                <div class="text-nowrap" title="@Lang.Holiday_HolidayPaidType" data-toggle="tooltip"  style="max-width:100px;overflow:hidden;"><span><i class="fa fa-money" style="color:mediumslateblue"> </i> @Lang.Holiday_HolidayPaidType </span></div>
            </th>
            <th>
                <div class="text-nowrap" title="@Lang.Holiday_OnDutyPaidRatio" data-toggle="tooltip"  style="max-width:100px;overflow:hidden;"><span><i class="fa fa-percent" style="color:mediumslateblue"> </i> @Lang.Holiday_OnDutyPaidRatio </span></div>
            </th>
            <th>
                <div class="text-nowrap">
                    @Html.ActionLink(" " + Lang.GeneralUI_OrderBy, "HolidayList", "FoundationData", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter }, htmlAttributes: new { @class = "fa fa-sort pull-right margin-top5", title = Lang.GeneralUI_OrderByLetter })
                </div>
            </th>
        </tr>
        @{int x = 0;}
        @foreach (var item in Model.HolidayList)
        {
            x++;
        <tr id="@string.Format("tr{0}",item.HolidayId)">
            <td id="@string.Format("td{0}",item.HolidayId)" class="text-omit small" data-toggle="tooltip" title="@Html.DisplayFor(modelItem => item.HolidayId)">
                <span id="@string.Format("sp{0}",item.HolidayId)" class="badge badge-dark" data-toggle="tooltip" style="cursor:pointer;">@x</span>
                <label id="@string.Format("lbl{0}",item.HolidayId)" class="text-dark text-uppercase">
                    @item.HolidayId.ToString()
                </label>
            </td>
            <td class="small" data-toggle="tooltip" title="@item.HolidayCnName">
               
                @if (String.IsNullOrEmpty(item.HolidayEnName))
                {
                    <span class="span1">@item.HolidayCnName</span>
                }
                else
                {
                    
                        <details open> <!--class="open"-->
                            <summary class="">  @item.HolidayCnName </summary>
                            <p> @item.HolidayEnName</p>
                        </details>
                    
                }
            </td>
            <td class="small" data-toggle="tooltip" title="@item.HolidayDate">
                @String.Format("{0:yyyy-MM-dd}", item.HolidayDate)
            </td>
            <td class="small" data-toggle="tooltip" title="@item.StatutoryHoliday">
                @{
                    bool result_StatutoryHoliday = false;
                    bool StatutoryHoliday = bool.TryParse(item.StatutoryHoliday.ToString(), out result_StatutoryHoliday);
                    if (result_StatutoryHoliday && StatutoryHoliday)
                    {
                        <span class="fa fa-arrow-circle-right"> @Lang.StatutoryHoliday_IS_STATUTORY </span>
                    }
                    else
                    {
                        <span class="fa fa-arrow-circle-right"> @Lang.StatutoryHoliday_NOT_STATUTORY </span>
                    }
                }
            </td>
            <td class="small" data-toggle="tooltip" title="@item.HolidayPaidType">
                @if(item.HolidayPaidType == 1)
                {
                    <span  class="fa fa-star font-red"> @Lang.HolidayList_WithSalary</span>
                }else
                {
                    <span class="fa fa-star font-red"> @Lang.HolidayList_NoSalary</span>
                }
            </td> 
            <td class="small" data-toggle="tooltip" title="@item.OnDutyPaidRatio">
                <span class="fa fa-angle-double-right"><b>@string.Format("{0}%", item.OnDutyPaidRatio * 100)</b></span>
            </td>
            <td>
                <div class="btn btn-group-sm">
                    <button type="button" class="btn btn-warning btn-sm pl-1 ml-2" onclick="@string.Format("javascript:DeleteHolidayDetailsData('{0}');", item.HolidayId)">
                        &nbsp; &nbsp;<i class="fa fa-trash"></i> &nbsp;
                    </button>
                </div>
            </td>
        </tr>
        }
    </table>
</div>

<div class="btn-xs">
    @Html.PagedListPager((IPagedList)Model.HolidayList, page => Url.Action("HolidayList", "FoundationData", new { sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, occurDateTimeRange = ViewBag.CurrentOccurDateTimeRange , page = page }), new PagedListRenderOptions
    {
        ContainerDivClasses = new[] { "pagination pagination-sm" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },
        MaximumPageNumbersToDisplay = 10
    })
</div>
 
<!--AddNew Modal --> 
<div class="modal fade" id="addNewHolidayPanel" tabindex="-1" role="dialog" aria-labelledby="addNewHolidayPanel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            @using (Ajax.BeginForm("HolidayAddNew", "FoundationData", new AjaxOptions { HttpMethod = "post", OnSuccess = "handleHolidayAddNew", OnFailure = "errHolidayAddNew", LoadingElementId = "Loading" }, new { @class = "form-horizontal", name = "form_HolidayAddNew", id = "form_HolidayAddNew" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.HolidayNew.HolidayId) 
                @Html.TextBox("HolidayId", "", new { @readonly = "readonly", @class = "hide" })
                <div class="modal-header">
                    <h5 class="modal-title" id="editLanguageTitle">@Lang.Holiday_HolidayAddNew_Title  </h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label class="control-label col-12" for="HolidayCnName">@Lang.Holiday_HolidayCnName</label>
                        <div class="row pl-2 pr-1">
                            <div class=" input-group">
                                @Html.TextBoxFor(model => model.HolidayNew.HolidayCnName, new { id = "HolidayCnName", Name = "HolidayCnName", @class = "AddNewHolidayCnName form-control form-control-sm bold col-sm-6 border-right-0 ", data_toggle = "tooltip", title = Lang.Holiday_HolidayCnName, placeholder = Lang.Holiday_HolidayCnName })
                                @Html.TextBoxFor(model => model.HolidayNew.HolidayEnName, new { id = "HolidayEnName", Name = "HolidayEnName", @class = "AddNewHolidayEnName form-control form-control-sm bold col-sm-5 border-left-0 input-group-append", data_toggle = "tooltip", title = Lang.Holiday_HolidayEnName, placeholder = Lang.Holiday_HolidayEnName })
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.HolidayNew.HolidayCnName, "", new { @class = "text-danger", data_valmsg_for = "HolidayCnName" })
                        @Html.ValidationMessageFor(model => model.HolidayNew.HolidayEnName, "", new { @class = "text-danger", data_valmsg_for = "HolidayEnName" })
                    </div>
                    <div class="form-group">
                        <label class="control-label col-12" for="HolidayCnName">@Lang.Holiday_HolidayDate</label>
                        <div class="row">
                            <div class="d-flex flex-row bd-highlight"> 
                                <div class="input-group col-sm-5 p-2 bd-highlight">
                                    @Html.TextBox("HolidayDate", string.Format("{0:yyyy-MM-dd}", DateTime.Now), new { @class = "AddNewHolidayDate form-control form-control-sm border-right-0", style = "background-color:#faf9eb", title = Lang.Holiday_HolidayDate, data_toggle = "tooltip" })
                                    <div class="input-group-append input-group-sm border-left-0" style="max-height:45px;">
                                        <span class="input-group-text border-left-0" style="background-color:#faf9eb" data-toggle="tooltip" title="@Lang.Holiday_HolidayDate_Readme"><span class="font-red small"><i class="fa fa-asterisk"></i></span></span>
                                    </div>
                                </div> 
                                <div class="p-2 bd-highlight">
                                    @Html.DropDownList("HolidayIsWholeDayType", ViewBag.HolidayIsWholeDayType as IEnumerable<SelectListItem>, Lang.GeneralUI_Select, new { @class = "form-control form-control-sm ml-2 pull-left", data_toggle = "tooltip", title = Lang.Holiday_IsWholeDay })
                                </div>
                            </div>
                        </div> 
                        @Html.ValidationMessageFor(model => model.HolidayNew.HolidayCnName, "", new { @class = "text-danger", data_valmsg_for = "HolidayCnName" })
                        @Html.ValidationMessageFor(model => model.HolidayNew.HolidayEnName, "", new { @class = "text-danger", data_valmsg_for = "HolidayEnName" })
                    </div>
                    <div class="form-group ">
                        <label class="control-label col-5" for="StatutoryHoliday">@Lang.Holiday_StatutoryHoliday </label>  <label class="control-label col-5" for="HolidayPaidType"> @Lang.Holiday_HolidayPaidType</label>
                        <div class="row  pl-2 pr-1">
                            @Html.DropDownList("StatutoryHolidayMode", ViewBag.StatutoryHoliday as IEnumerable<SelectListItem>, Lang.GeneralUI_Select, new { Name = "StatutoryHolidayMode", Id = "StatutoryHolidayMode", @class = "AddNewStatutoryHolidayMode form-control form-control-sm col-5 mr-2 pull-left selectpicker", data_toggle = "tooltip", title = Lang.Holiday_StatutoryHoliday })
                            @Html.DropDownList("HolidayPaidType", ViewBag.HolidayPaidType as IEnumerable<SelectListItem>, Lang.GeneralUI_Select, new { Name = "HolidayPaidType", Id = "HolidayPaidType", @class = "AddNewHolidayPaidType form-control form-control-sm col-5 ml-2 selectpicker", data_toggle = "tooltip", title = Lang.Holiday_HolidayPaidType })
                        </div>
                        @Html.ValidationMessageFor(model => model.HolidayNew.StatutoryHoliday, "", new { @class = "text-danger", data_valmsg_for = "StatutoryHoliday" })
                        @Html.ValidationMessageFor(model => model.HolidayNew.HolidayPaidType, "", new { @class = "text-danger", data_valmsg_for = "HolidayPaidType" })
                    </div>
                    <div class="form-group pl-0 ml-0">
                        <label class="control-label col-12" for="OnDutyPaidRatio">@Lang.Holiday_OnDutyPaidRatio</label>
                        <div class="">
                            @Html.DropDownList("OnDutyPaidRatio", ViewBag.OnDutyPaidRatio as IEnumerable<SelectListItem>, Lang.GeneralUI_Select, new { Name = "OnDutyPaidRatio", Id = "OnDutyPaidRatio", @class = "AddNewOnDutyPaidRatio form-control form-control-sm selectpicker", data_toggle = "tooltip", title = Lang.Holiday_OnDutyPaidRatio })
                        </div>
                        @Html.ValidationMessageFor(model => model.HolidayNew.OnDutyPaidRatio, "", new { @class = "text-danger", data_valmsg_for = "OnDutyPaidRatio" })
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" id="AddNewComfirmed" class="btn btn-primary"> @Lang.GeneralUI_AddNew </button>
                </div>
            }
        </div>
    </div>
</div>

<script>
    
    //AddNew ----------------------------
    function handleHolidayAddNew(data) {
        console.log(JSON.stringify(data));
        layer.open({
                title: '@Lang.GeneralUI_ReturnResult'
            , content: data.Message
                , btn:'@Lang.GeneralUI_OK'
        });
        if (data.MsgCode != "0") {
            redirectLocaleUrl = "@Url.Action("HolidayList", "FoundationData", new { Area = "Admin"})";
            setTimeout(
                function() {
                    window.location = redirectLocaleUrl + "?searchString=" + data.MsgCode;
                }
            , 3000);
        } 
    }

    function errHolidayAddNew() {
        alert('@Lang.GeneralUI_ServerError'+ "--client AddNew");
    }
     
    function errHolidayDetails() {
        alert('@Lang.GeneralUI_ServerError'+ "--client");
    }  
    function DeleteHolidayDetailsData(HolidayId)
    {
        console.log(HolidayId);

        layer.confirm('@Lang.HolidayList_ComfirmTips \n\r <br> @Lang.HolidayList_ComfirmTips2 ', {
            title:'@Lang.GeneralUI_InfoTips',
            btn: ['@Lang.GeneralUI_Yes', '@Lang.GeneralUI_NO'] //btn
        }, function () {
            //TODO
            var httpDelUrl = "/@LangUtilities.LanguageCode/Admin/FoundationData/DeleteHoliday";

            var myparamsObject = { "HolidayId": HolidayId};
            $.ajax({
                url: httpDelUrl,
                data: myparamsObject,
                type: "get",
                dataType: "json",
                error: function (data) {
                    console.log(JSON.stringify(data));
                },
                success: function (data) {
                    console.log(JSON.stringify(data));
                    layer.open({
                        title: '@Lang.GeneralUI_ReturnResult'
                        , content: data.Message
                    , btn:'@Lang.GeneralUI_OK'
                    });
                    if (data.MsgCode != "0") {
                        var pr_obj = "#td" + HolidayId;
                        $(pr_obj).parent().addClass("bg-warning-gradient");
                        setTimeout(function () {
                            $(pr_obj).parent().remove();
                        }, 3000);
                    }
                }
            });
             
            }, function () {
                layer.msg('@Lang.HolidayList_ComfirmNoTips', { icon: 1 }, {
                    time: 80000,
                    btn: ['@Lang.GeneralUI_Isee']
                });
            });
    }
</script>
<script>
    $(document).ready(function () {
        DateTimeRangeMultiLanguage.timePicker = false;
       
        $('#HolidayDateRange').daterangepicker(DateTimeRangeMultiLanguage);
    });
</script>