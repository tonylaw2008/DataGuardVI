@using LanguageResource
@{
    ViewBag.Title = string.Format("{0} {1}", Lang.EmployeeQuickAdd_Title, ViewBag.Operation);
}
@model DataGuard.Areas.EmployeeStep1
<!-- Main content -->

<div class="container-fluid">
    <!-- Info boxes -->
    <div class="row">
        @{
            Html.RenderAction("EmployeeQuickHeader", "Employee", new { EmployeeId = ViewBag.EmployeeId, Step = 1 });
        }
    </div>
    <!-- /.row -->
    <div class="row center-block">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title"><i class="fas fa-user" style="color:forestgreen;font-weight:bold"></i> @Html.DisplayFor(model => model.FullName) <span class="h5 bg-light-gradient pl-2" style="border:dashed;border-color:beige;border-width:thin"> @Lang.EmployeeQuickHeader_BasicInfoAdd &nbsp;</span></h5>
                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>
                <!-- /.card-header -->
                <div class="card-body">
                    <div class="container pl-lg-5 pl-md-5  col-lg-offset-6 col-md-offset-6">
                        <div class="col-lg-5 col-md-5 col-sm-12  ">
                            <a href="" name="FullName"></a>
                            <!--STEP1 BEGIN-->
                            @using (Ajax.BeginForm("EmployeeQuickAdd", "Employee", new AjaxOptions { HttpMethod = "post", OnSuccess = "handleEmployeeQuickAdd", OnBegin = "onBeginSubmit", OnFailure = "errEmployeeQuickAdd", LoadingElementId = "Loading" }, new { @class = "form-horizontal", name = "form_EmployeeQuickAdd", id = "form_EmployeeQuickAdd" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(model => model.EmployeeId)
                                @Html.HiddenFor(model => model.The3rdPartyEmployeeId)
                                @Html.HiddenFor(model => model.Gender)
                                @Html.HiddenFor(model => model.Birthday)
                                @Html.HiddenFor(model => model.UserId)
                                @Html.HiddenFor(model => model.ParentUserId)
                                @Html.HiddenFor(model => model.MainComId)
                                @Html.HiddenFor(model => model.CompanyName)
                                @Html.HiddenFor(model => model.LeaveDate)
                                @Html.HiddenFor(model => model.Remarks)
                                @Html.HiddenFor(model => model.OperatedUserName)
                                @Html.HiddenFor(model => model.CreatedDate)
                                @Html.HiddenFor(model => model.OperatedDate)
                                @Html.HiddenFor(model => model.IsBlock)

                                <div class="form-group mb-2">
                                    <label class="control-label col-12" for="CnName" data-toggle="tooltip" title="@Lang.Employee_FullName @Html.DisplayFor(model=>model.FullName)"><i class="fas fa-file-signature" style="color:forestgreen"></i> @Lang.Employee_CnName</label>
                                    <div class="input-group ">
                                        @Html.TextBoxFor(model => model.CnName, new { @class = "border-right-0 form-control form-control-sm col-9 bold ", style = "background-color:#F4FCB5", placeholder = Lang.Employee_CnName2 })
                                        <div class="input-group-append input-group-sm small">
                                            <span class="input-group-text border-left-0 " style="background-color:#faf9eb" data-toggle="tooltip" title="@Lang.Employee_CnName">
                                                <i class="fa fa-asterisk" style="color:red;font-size:11px"></i>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group  mb-2">
                                    <label class="control-label col-12" for="LastName"><i class="fas fa-signature" style="color:forestgreen"></i> @Lang.Employee_EnglishName</label>
                                    <div class="input-group">
                                        @Html.TextBoxFor(model => model.LastName, new { @class = "border-right-0 form-control form-control-sm bold col-6", data_toggle = "title", title = Lang.Employee_EnglishName, placeholder = Lang.Employee_LastName })
                                        @Html.TextBoxFor(model => model.FirstName, new { @class = "border-right-0 form-control form-control-sm bold col-3", style = "border-left-width:2px;border-left-style:dashed;border-left-color:bisque;", data_toggle = "title", title = Lang.Employee_EnglishName, placeholder = Lang.Employee_FirstName })
                                        <div class="input-group-append input-group-sm">
                                            <span class="input-group-text border-left-0" style="background-color:#faf9eb;cursor:help;" data-toggle="tooltip" title="@Lang.Employee_EnglishName">
                                                <i class="fa fa-asterisk" style="color:forestgreen;font-size:11px"></i>
                                            </span>
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                                    <p for="LastName" class="label label-warning badge badge-warning mb-1 h6 lead"><i class="fa fa-circle" style="color:forestgreen"></i> @string.Format("{0} {1} {2} {3}", Lang.Employee_CnName2, Lang.GeneralUI_OR, Lang.Employee_LastName, Lang.GeneralUI_Required)</p>
                                </div>
                                <div class="form-group  mb-2">
                                    <label class="control-label col-12" for="PhoneNumber"><i class="fas fa-mobile-alt" style="color:forestgreen"></i> @Lang.Employee_PhoneNumber </label>
                                    <div class="input-group">
                                        @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "border-right-0 form-control form-control-sm col-9 bold" })
                                        <div class="input-group-append input-group-sm">
                                            <span class="input-group-text border-left-0" style="background-color:#faf9eb" data-toggle="tooltip" title="@Lang.Employee_PhoneNumber @Lang.GeneralUI_Optional">
                                                <i class="fas fa-angle-double-right" style="color:forestgreen;font-size:11px"></i>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group  mb-2">
                                    <label class="control-label col-12" for="Email"><i class="fas fa-envelope" style="color:forestgreen"></i> @Lang.Employee_Email</label>
                                    <div class="input-group ">
                                        @Html.TextBoxFor(model => model.Email, new { @class = "border-right-0 form-control form-control-sm bold col-9" })
                                        <div class="input-group-append input-group-sm">
                                            <span class="input-group-text border-left-0" style="background-color:#faf9eb" data-toggle="tooltip" title="@Lang.Employee_Email  @Lang.GeneralUI_Optional">
                                                <i class="fas fa-angle-double-right" style="color:forestgreen;font-size:11px"></i>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group mb-2">
                                    <label class="control-label col-12" for="EnrollmentDate"><i class="fas fa-calendar-alt" style="color:forestgreen"></i> @Lang.Employee_EnrollmentDate</label>
                                    <div class="input-group">
                                        @Html.TextBoxFor(model => model.EnrollmentDate, new { Value = Model.EnrollmentDate.ToString("yyyy-MM-dd"), @class = "border-right-0 form-control form-control-sm  col-9 bold" })
                                        <div class="input-group-append input-group-sm">
                                            <span class="input-group-text border-left-0" style="background-color:#faf9eb" data-toggle="tooltip" title="@Lang.Employee_EnrollmentDate  @Lang.GeneralUI_Optional">
                                                <i class="fas fa-angle-double-right" style="color:forestgreen;font-size:11px"></i>
                                            </span>
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.EnrollmentDate, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group mb-2 pt-2 pb-2">
                                    <div class="d-flex bd-highlight ">
                                        <div class="pl-0 flex-grow-1 bd-highlight">
                                            <a href="@Url.Action("EmployeeList","Employee")" target="_self" class="btn btn-sm btn-success flat mr-2 ">@Lang.GeneralUI_Return @Lang.EmployeeList_Title</a>
                                        </div>
                                        <div class="bd-highlight"></div>
                                        <div class="bd-highlight">
                                            @if (!string.IsNullOrEmpty(ViewBag.EmployeeId))
                                            {
                                                <a href="@Url.Action("EmployeeQuickReco","Employee",new { EmployeeId= ViewBag.EmployeeId,step=2 })" target="_self" class="btn btn-sm btn-success flat mr-2">@Lang.GeneralUI_Skip ,@Lang.GeneralUI_Next</a>
                                            }
                                            <button type="submit" id="btnaddnew" class="btn btn-sm btn-primary mr-2"> @ViewBag.Operation </button>
                                        </div>
                                    </div>
                                </div>
                            }
                            <!--STEP1 END-->
                        </div>
                    </div>
                </div>
                <!-- ./card-body -->
            </div>
            <!-- /.card -->
        </div>
        <!-- /.col -->
    </div>
</div><!--/. container-fluid -->
<!-- /.content -->
 
<script>
    $(document).ready(function () {

        var redirectQuickRecoUrl = "@Html.Raw(Url.Action("EmployeeQuickReco", "Employee", new { Area = "Admin",EmployeeId = ViewBag.EmployeeId ,Step = 2}))";
        var message = "@ViewBag.message";
        if (message.length > 1 ) {

            layer.open({
                title: '@Lang.GeneralUI_ReturnResult'
                , content: message
                , btn: '@Lang.GeneralUI_OK'
            });
        }
        $('#EnrollmentDate').datepicker({
            format: '@Lang.GeneralUI_DateFormate',
            timePicker: false,
        });
    });
    function handleEmployeeQuickAdd(result) {
        console.log(result);
        layer.close(layer.index);

        if (result.meta.Success === true) {
            var successIndex = layer.confirm(result.meta.Message +" , ID = " + result.data.EmployeeId , {      //'@Lang.GeneralUI_ReturnResult',
                btn: ['@Lang.GeneralUI_OK', '@Lang.GeneralUI_NO']
            }, function () {

                    toastr["success"]("OK"); 
                    layer.close(successIndex);

            }, function () {
                    toastr["success"]("Disard to assign the current to the device");

                    setTimeout(function () { 
                            var EmployeeId = result.data.EmployeeId;
                            var redirectQuickRecoUrl = "@Html.Raw(Url.Action("EmployeeQuickReco", "Employee", new { Area = "Admin",Step = 2}))";
                            if (EmployeeId.length > 1) {
                                redirectQuickRecoUrl = redirectQuickRecoUrl + "&EmployeeId=" + EmployeeId;
                            }
                            console.log(redirectQuickRecoUrl);
                            window.location = redirectQuickRecoUrl;
                    } , 1000);
            });
        } else {
             layer.open({
                title: '@Lang.GeneralUI_ReturnResult'
                , content: result.meta.Message
                , btn: '@Lang.GeneralUI_OK'
            });
        }
    }
    function errEmployeeQuickAdd(data) {
        layer.close(layer.index);
        console.log(JSON.stringify(data));
        alert('@Lang.GeneralUI_ServerError' + "--client AddNew");
        //layer.clear();
    }
</script>