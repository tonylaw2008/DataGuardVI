@using LanguageResource
@model AttendanceBussiness.DbFirst.Employee
@{
    string oper = ViewBag.IsUpdateStatus == true ? Lang.GeneralUI_Update : Lang.GeneralUI_Create; 
    ViewBag.Title = Lang.EmployeeDetails_Title + "  " + oper;
} 

@using (Ajax.BeginForm("EmployeeDetails", null, new { AssociateUserid = ViewBag.CurrentAssociateUserid, TempEmployeeId = ViewBag.CurrentEmployeeId }, new AjaxOptions { HttpMethod = "post", OnSuccess = "HandleDetailsAddUpdateSuccDialog", OnFailure = "errDetailsAddUpdate", LoadingElementId = "Loading" }, new { @class = "form-horizontal" }))
{
    <div class="card card-primary card-outline">
        <div class="card-header">
            <h3 class="card-title">@Lang.GeneralUI_System - @ViewBag.CompanyName  </h3>

            <div class="card-tools">
                <button type="button" class="btn btn-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                <button type="button" class="btn btn-tool" data-widget="remove"><i class="fa fa-remove"></i></button>
            </div>
        </div>
        <!-- /.card-header -->
        <div class="card-body " style="display: block;">
            @Html.AntiForgeryToken()

            @Html.HiddenFor(model => model.EmployeeId)
            @Html.HiddenFor(model => model.The3rdPartyEmployeeId)
            @Html.HiddenFor(model => model.ParentUserId)
            @Html.HiddenFor(model => model.OperatedDate)
            @Html.HiddenFor(model => model.CreatedDate)

            <div class="card card-primary">
                <div class="card-body">
                    <div class="form-group hide">
                        <label class="control-label">@Lang.Employee_UserId</label>
                        <div class="col-9">
                            @Html.TextBoxFor(model => model.UserId, new { @class = "form-control form-control-sm", @readonly = ViewBag.UserIdEditable, data_toggle = "tooltip", placeHolder = Lang.Employee_UserId, title = Lang.Employee_UserId })
                            @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <!--@Lang.EmployeeDetails_BasicPersonalDetail -------------------------------------------------------------------------------------------------------------------+-->
                    <!--UserIcon-->
                    <div class="form-group">
                        <div class="row">
                            <div class="col-2">
                                <div class="form-group">
                                    <label class="control-label">@Lang.Employee_UserIcon </label>
                                    <div class="col-6 pl-3">
                                        @Html.TextBoxFor(model => model.UserIcon, new { @class = "form-control form-control-sm hide", data_toggle = "tooltip", placeHolder = Html.DisplayNameFor(model => model.UserIcon), title = Lang.Employee_UserIcon })
                                        @Html.ValidationMessageFor(model => model.UserIcon, "", new { @class = "text-danger  small" })
                                        <ul class="list-unstyled list-inline">
                                            <li>
                                                <a id="OpenDialog" style="width:110px;display:block;">
                                                    @if (string.IsNullOrEmpty(Html.DisplayFor(model => model.UserIcon).ToString().Trim()) || Html.DisplayFor(model => model.UserIcon).ToString().IndexOf("comtent") != -1)
                                                    {
                                                        <img id="uploadPicResult" src="@Url.Content("~/images/AddPicture_a.png")" width="90" class="img-thumbnail" />
                                                    }
                                                    else
                                                    {
                                                        <img id="uploadPicResult" src="@Html.DisplayFor(model => model.UserIcon)" alt="@Lang.GeneralUI_Browse" width="110" class="img-thumbnail" />
                                                    }
                                                </a>
                                            </li>

                                            <li>
                                                <input type="file" value="@Lang.GeneralUI_Browse" id="file_uploadPic" SrvUrl="/@LangUtilities.LanguageCode/Utilities/UpLoadProcessX?Prefix=E&SubPath=Employee&TargetTalbeKeyId=@ViewBag.CurrentEmployeeId&MainComId=@ViewBag.MainComId"
                                                       mime_type="image/jpeg" accept="image/jpeg" class="input-group-sm hide" />  @* class="input_decorate" onchange="javascript: uploadPic();"*@
                                                </li>
                                            </ul>
                                        </div>
                                </div>
                            </div>
                            <div class="col-10">
                                <div class="row">
                                    <div class="d-flex flex-row bd-highlight">
                                        <div class="bd-highlight">
                                            <label class="control-label" title="@Lang.EmployeeDetails_CnNameTips" data-toggle="tooltip">@Lang.GeneralUI_CnName</label>
                                            <div class="col-9">
                                                <div class="input-group mb-3">
                                                    @Html.TextBoxFor(model => model.CnName, new { @class = "form-control form-control-sm border-right-0", placeholder = Lang.Employee_CnName })
                                                    <div class="input-group-append border-right-0">
                                                        <span class="input-group-text border-left-0"><span class="font-red small"><i class="fas fa-asterisk text-danger"></i></span></span>
                                                    </div>
                                                </div>
                                                @Html.ValidationMessageFor(model => model.CnName, "", new { @class = "text-danger  small" })
                                            </div>
                                        </div>
                                        <div class="bd-highlight">
                                            <label class="control-label">@Lang.GeneralUI_EnName</label>
                                            <div class="col-9 input-group mb-3">
                                                @Html.TextBoxFor(model => model.LastName, new { @class = "form-control form-control-sm", style = "border-right:0;max-width:140px;max-height:40px", placeholder = Lang.Employee_LastName })
                                                @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control form-control-sm", style = "border-left:0;max-width:140px;max-height:40px;border-top-right-radius:5px;border-bottom-right-radius:5px;", placeholder = Lang.Employee_FirstName })
                                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="bd-highlight">
                                            <label class="control-label">@Lang.Employee_Gender</label>
                                            <div class="col-9">
                                                @Html.DropDownListFor(model => model.Gender, (IEnumerable<SelectListItem>)ViewBag.GenderList, new { @class = "form-control form-control-sm" })
                                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger small" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    
                                        <div class="d-flex flex-row bd-highlight">
                                            <div class="bd-highlight">
                                                <div class="form-group  no-padding no-margin">
                                                    <label class="control-label">@Lang.Employee_PhoneNumber</label>
                                                    <div class="col-12">
                                                        @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control form-control-sm", placeholder = Lang.Employee_PhoneNumber })
                                                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger  d-md-inline-block  small" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="bd-highlight">
                                                <div class="form-group no-padding no-margin">
                                                    <label class="control-label">@Lang.Employee_Email</label>
                                                    <div class="col-12">
                                                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control form-control-sm", placeholder = Lang.Employee_Email })
                                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger  small" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                    <!--+--------------------------------------------------------------------------------------------------------------------+-->
                    <!--系统资料-->
                    <div class="form-group  @ViewBag.DisplayMainComId">
                        <label class="control-label" for="MainComId">@Lang.Employee_MainComId</label>@ViewBag.DisplayMainComId
                        <div class="col-9">
                            @Html.TextBoxFor(model => model.MainComId, new { @class = "form-control form-control-sm", @readonly = ViewBag.MainComIdEditable, placeholder = Lang.Employee_MainComId })
                            @Html.ValidationMessageFor(model => model.MainComId, "", new { @class = "text-danger  small" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-6">
                                <div class="card card-default ml-3">
                                    <div class="card-body">
                                        <div class="form-group">
                                            <label class="control-label" for="ContractorId">@Lang.Employee_ContractorName</label>
                                            <div class="col-8">
                                                @Html.DropDownList("ContractorId", null, Lang.GeneralUI_Select, new { @class = "form-control form-control-sm", data_toggle = "tooltip", placeholder = Lang.Employee_ContractorId, title = Lang.Employee_ContractorId })
                                                @Html.ValidationMessageFor(model => model.ContractorId, "", new { @class = "text-danger  small" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label" for="SiteId">@Lang.Employee_SiteName</label>
                                            <div class="col-8">
                                                @Html.DropDownList("SiteId", null, Lang.GeneralUI_Select, new { @class = "form-control form-control-sm", data_toggle = "tooltip", placeholder = Lang.Employee_SiteId, title = Lang.Employee_SiteId })
                                                @Html.ValidationMessageFor(model => model.SiteId, "", new { @class = "text-danger  small" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label" for="DepartmentId">@Lang.Employee_Department</label>
                                            <div class="col-8">
                                                <div class="input-group">
                                                    @Html.DropDownList("DepartmentId", null, Lang.GeneralUI_Select, new { @class = "form-control form-control-sm border-right-0", data_toggle = "tooltip", placeholder = Lang.Employee_Department, title = Lang.Employee_Department })
                                                    <div class="input-group-append border-right-0">
                                                        <span class="input-group-text border-left-0"><span class="font-red small"><i class="fas fa-asterisk text-danger"></i></span></span>
                                                    </div>
                                                </div>
                                                @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger  small" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label" for="PositionId">@Lang.Employee_Position</label>
                                            <div class="col-8">
                                                @Html.DropDownList("PositionId", null, Lang.GeneralUI_Select, new { @class = "form-control form-control-sm", data_toggle = "tooltip", placeholder = Lang.Employee_Position, title = Lang.Employee_Position })
                                                @Html.ValidationMessageFor(model => model.PositionId, "", new { @class = "text-danger  small" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label" for="JobId">@Lang.Employee_Job</label>
                                            <div class="col-8">
                                                @Html.DropDownList("JobId", null, Lang.GeneralUI_Select, new { @class = "form-control form-control-sm", data_toggle = "tooltip", placeholder = Lang.Employee_JobId, title = Lang.Employee_JobId })
                                                @Html.ValidationMessageFor(model => model.JobId, "", new { @class = "text-danger  small" })
                                            </div>
                                        </div>
                                    </div>
                                    <!-- /.card-body -->
                                </div>
                                <!-- /.card -->
                            </div>
                            <!-- /.col -->

                            <div class="col-6">
                                <div class="card card-default  mr-3">
                                    <div class="card-body">
                                        <div class="form-group">
                                            <label class="control-label" for="AccessCardId">@Lang.Employee_AccessCardId</label>
                                            <div class="col-8">
                                                <div class="input-group ">
                                                    @Html.TextBoxFor(model => model.AccessCardId, new { @class = "form-control form-control-sm  border-right-0", placeholder = Lang.Employee_AccessCardId })
                                                    <div class="input-group-append border-right-0">
                                                        <span class="input-group-text border-left-0"><span class="font-red small"><i class="fas fa-asterisk text-danger"></i></span></span>
                                                    </div>
                                                </div>
                                                @Html.ValidationMessageFor(model => model.AccessCardId, "", new { @class = "text-danger  small" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label" for="AccessCardId">@Lang.Employee_FingerPrint</label>
                                            <div class="col-8">
                                                <div class="input-group ">
                                                    @Html.TextBoxFor(model => model.FingerPrint, new { @class = "form-control form-control-sm  border-right-0", placeholder = Lang.Employee_FingerPrint })
                                                    <div class="input-group-append border-right-0">
                                                        <span class="input-group-text border-left-0"><span class="font-red small"><i class="fas fa-asterisk text-danger"></i></span></span>
                                                    </div>
                                                </div>
                                                @Html.ValidationMessageFor(model => model.FingerPrint, "", new { @class = "text-danger  small" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label" for="EnrollmentDate">@Lang.Employee_EnrollmentDate</label>
                                            <div class="col-8">
                                                @Html.TextBoxFor(model => model.EnrollmentDate, new { data_provide="datepicker", @class = "datepicker form-control form-control-sm", Value = Model.EnrollmentDate.ToString("yyyy-MM-dd") , placeholder = Lang.Employee_EnrollmentDate })
                                                @Html.ValidationMessageFor(model => model.EnrollmentDate, "", new { @class = "text-danger small" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label" for="LeaveDate" title="@Lang.EmployeeDetails_LeaveDateTips" data-toggle="tooltip">@Lang.Employee_LeaveDate</label>
                                            <div class="col-8">
                                                @Html.TextBoxFor(model => model.LeaveDate, new { data_provide="datepicker", @class = "datepicker form-control form-control-sm", Value = Model.LeaveDate.ToString("yyyy-MM-dd"), placeholder = Lang.Employee_LeaveDate })
                                                @Html.ValidationMessageFor(model => model.LeaveDate, "", new { @class = "text-danger small" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label">@Lang.Employee_Birthday</label>
                                            <div class="col-8">
                                                @Html.TextBoxFor(model => model.Birthday, new { data_provide="datepicker", Value = Model.Birthday.ToString("yyyy-MM-dd"), data_date_format="yyyy-mm-dd", @class = "datepicker form-control form-control-sm", placeholder = Lang.Employee_Birthday })
                                                @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger small" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label" for="IsBlock">@Lang.Employee_IsBlock</label>
                                            <div class="col-8">
                                                @Html.CheckBoxFor(model => model.IsBlock, new { @class = "form-control col-sm-1 form-control-sm bg-success" })
                                                @Html.ValidationMessageFor(model => model.IsBlock, "", new { @class = "text-danger small" })
                                            </div>
                                        </div>
                                    </div>
                                    <!-- /.card-body -->
                                </div>
                                <!-- /.card -->
                            </div>
                            <!-- /.col -->
                        </div>
                        <!-- /.row -->
                    </div>
                    <div class="form-group">
                        <label class="col-3 control-label" for="Remarks">@Lang.Employee_Remarks</label>
                        <div class="col-9 pl-3">
                            @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control col-12", placeholder = Lang.Employee_Remarks })
                        </div>
                    </div>
                </div>
            </div>
    </div>
                <!-- /.card-body -->
                <div style="display: block;">
                    <div class="container card-footer">
                        <div class="row">
                            <div class="margin-left5 padding-left5">
                                <button type="submit" id="btnaddnew" class="btn btn-primary padding-left15 margin-left5">
                                    @oper
                                </button>

                                @Html.ActionLink(Lang.GeneralUI_Return, "Employeelist", null, new { @class = "btn btn-primary padding-left15 margin-left5" })

                                @if (string.IsNullOrEmpty(ViewBag.CurrentEmployeeId) == false)
                                {
                                    <button type="button" id="btnDel" class="hide btn btn-danger padding-left15 margin-left5">@Lang.GeneralUI_Delete</button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
 }

<script>
    $(document).ready(function () {
        $('.datepicker').datepicker(
            {
                Language:"@LangUtilities.LanguageCode",
                timePicker: false,
                autoclose: true,
                todayHighlight: true,
                format: 'yyyy-mm-dd',
                templates: {
                leftArrow: '«',
                    rightArrow: '»' 
                },
                showWeekDays: true
            }
        ); 
                  
        $("#btnaddnew").click(function () {
            $("#btnaddnew").attr("value","@Lang.GeneralUI_DataSending");
        });
        
    });

</script>

<script>

    function HandleDetailsAddUpdateSuccDialog(data)
    {
        console.log(JSON.stringify(data));
        var redirectLocaleUrl = "@Url.Action("Employeelist", "Employee")";
        if (data.MsgCode != "-1") // EmployeeDetails_DepartmentId_Required
        {
            layer.open({
                title: '@Lang.GeneralUI_ReturnResult'
                , content: data.Message
            });
            setTimeout(
                function () {

                    window.location.href = redirectLocaleUrl;
                }
                , 3000);
        }
        if (data.MsgCode != "0" || data.MsgCode != "-1")
        {
            $("#btnaddnew").attr("value", "@Lang.GeneralUI_Create");

            layer.open({
                title: '@Lang.GeneralUI_ReturnResult'
                , content: data.Message
            });
            var searchString = data.MsgCode;
            redirectUrl = "@Url.Action("EmployeeList", "Employee")" + "?searchString=" + searchString;

            setTimeout("golist(redirectUrl);",3000);

        } else {
            console.log(JSON.stringify(data));
            console.log("@Lang.GeneralUI_ServerError \n\r" + data.MsgCode + ":" + data.Message);
            layer.msg('@Lang.GeneralUI_ReturnResult @Lang.GeneralUI_ReturnResult');
            layer.open({
                title: '@Lang.GeneralUI_ReturnResult'
                ,content: data.Message
                ,btn: ['@Lang.GeneralUI_OK']
            });
        }
    }
    function golist(redirectUrl)
    {
        window.location = redirectUrl; // ,new { searchString = ViewBag.CurrentEmployeeId }
    }
    function errDetailsAddUpdate(data) {
        console.log(JSON.stringify(data));
        alert(data.MsgCode + ":" + data.Message);
    }
</script>

<script>
                    $("#OpenDialog").click(function () {
                        console.log("Open file Dialog ");
                        $("#file_uploadPic").click();
                    });
                    $("#file_uploadPic").change(function uploadPic() {
                        var fileInfo = document.getElementById("file_uploadPic").files[0];
                        console.log("fileInfo::{0}" , fileInfo);
                        var SrvUrl = $("#file_uploadPic").attr('SrvUrl');
                        console.log("title picture::" + SrvUrl);

                        var form = new FormData();
                        form.append("file", fileInfo);
                        var xhr = new XMLHttpRequest();
                        xhr.open("post", SrvUrl, false); 
                        xhr.send(form);
                        if (xhr.responseText === "0") {
                            alert("Error \n\r Server has no any file recieve \n" + xhr.responseText);
                        }
                        else {
                            var json1 = JSON.parse(xhr.responseText);
                            //-----------------------------------------------------------------------------------------------------------$("#Loading").addClass("hidden");
                            $("#UserIcon").val(json1.filePathName);
                            console.log("Set #UserIcon OK ");
                            $("#uploadPicResult").attr("src", json1.filePathName);
                        }
                        console.log(xhr.responseText);
                    });
</script>





